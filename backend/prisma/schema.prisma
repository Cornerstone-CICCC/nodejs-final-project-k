// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id     Int      @id @default(autoincrement())
  userName String @unique
  // relation to Message
  messages   Message[]
  // relation to DirectMessageChannel
  directMessageChannels DirectMessageChannelOnUsers[]
  // relation to Message
  messagesByChannel   MessageByChannel[]
}

model Message {
  id         Int        @id @default(autoincrement())
  text   String
  created_at DateTime @default(now()) @db.Timestamptz(3)
  // relation to User
  user     User       @relation(fields: [userId], references: [id])
  userId   Int // relation scalar field  (used in the `@relation` attribute above)
  // relation to DateMessageByDirectMessageChannel
  dateMessageByDirectMessageChannel DateMessageByDirectMessageChannel?  @relation(fields: [dateMessageIdByDirectMessageChannel], references: [id])
  dateMessageIdByDirectMessageChannel Int?
}

model DateMessageByDirectMessageChannel {
  id    Int    @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(3)
  messages Message[]
  // relation to DirectMessageChannel
  directMessageChannel DirectMessageChannel  @relation(fields: [directMessageChannelId], references: [id])
  directMessageChannelId Int
}

model DirectMessageChannel {
  id    Int    @id @default(autoincrement())
  users DirectMessageChannelOnUsers[]
  dateMessage DateMessageByDirectMessageChannel[]
}

model DirectMessageChannelOnUsers {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  directMessageChannel   DirectMessageChannel @relation(fields: [directMessageChannelId], references: [id])
  directMessageChannelId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([userId, directMessageChannelId])
}

model MessageByChannel {
  id         Int        @id @default(autoincrement())
  text   String
  created_at DateTime @default(now()) @db.Timestamptz(3)
  // relation to User
  user     User       @relation(fields: [userId], references: [id])
  userId   Int // relation scalar field  (used in the `@relation` attribute above)
  // relation to DateMessageByDirectMessageChannel
  dateMessageByChannel DateMessageByChannel?  @relation(fields: [dateMessageIdByChannel], references: [id])
  dateMessageIdByChannel Int?
}

model DateMessageByChannel {
  id    Int    @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(3)
  messages MessageByChannel[]
  // relation to DirectMessageChannel
  channel Channel  @relation(fields: [channelId], references: [id])
  channelId Int
}

model Channel {
  id    Int    @id @default(autoincrement())
  name String
  dateMessage DateMessageByChannel[]
}


